{
  "openapi": "3.1.0",
  "paths": {
    "/v1/publications/{publicationId}": {
      "get": {
        "description": "Retrieve detailed information about a specific publication",
        "summary": "Get publication by ID",
        "tags": [
          "publications"
        ],
        "parameters": [
          {
            "name": "publicationId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Unique identifier of the publication"
          },
          {
            "name": "x-api-key",
            "in": "header",
            "schema": {
              "type": "string",
              "description": "API key for authenticating requests"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Publication details retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "Unique identifier for the publication"
                    },
                    "name": {
                      "type": "string",
                      "description": "Display name of the publication"
                    },
                    "ownerUserId": {
                      "type": "string",
                      "description": "ID of the user who owns this publication"
                    },
                    "slug": {
                      "type": "string",
                      "pattern": "^[a-z0-9-]+$",
                      "description": "URL-friendly identifier for the publication"
                    },
                    "custom_domain": {
                      "type": "string",
                      "description": "Custom domain configured for this publication"
                    },
                    "summary": {
                      "type": "string",
                      "maxLength": 500,
                      "description": "Brief description of the publication (max 500 characters)"
                    },
                    "logo_url": {
                      "type": "string",
                      "format": "uri",
                      "description": "URL to the publication's logo image"
                    }
                  },
                  "required": [
                    "id",
                    "name",
                    "ownerUserId",
                    "slug"
                  ],
                  "description": "Publication details retrieved successfully"
                }
              }
            }
          },
          "404": {
            "description": "Publication not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "enum": [
                        false
                      ],
                      "description": "Always false for error responses"
                    },
                    "msg": {
                      "type": "string",
                      "description": "Human-readable error message"
                    },
                    "error": {
                      "type": "string",
                      "description": "Technical error details or error code"
                    }
                  },
                  "required": [
                    "success",
                    "msg"
                  ],
                  "description": "Publication not found"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "enum": [
                        false
                      ],
                      "description": "Always false for error responses"
                    },
                    "msg": {
                      "type": "string",
                      "description": "Human-readable error message"
                    },
                    "error": {
                      "type": "string",
                      "description": "Technical error details or error code"
                    }
                  },
                  "required": [
                    "success",
                    "msg"
                  ],
                  "description": "Internal server error"
                }
              }
            }
          }
        }
      }
    },
    "/v1/publications/slug/{slug}": {
      "get": {
        "description": "Retrieve publication details using its URL-friendly slug",
        "summary": "Get publication by slug",
        "tags": [
          "publications"
        ],
        "parameters": [
          {
            "name": "slug",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[a-z0-9-]+$"
            },
            "description": "URL-friendly identifier of the publication"
          },
          {
            "name": "x-api-key",
            "in": "header",
            "schema": {
              "type": "string",
              "description": "API key for authenticating requests"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Publication details retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "Unique identifier for the publication"
                    },
                    "name": {
                      "type": "string",
                      "description": "Display name of the publication"
                    },
                    "ownerUserId": {
                      "type": "string",
                      "description": "ID of the user who owns this publication"
                    },
                    "slug": {
                      "type": "string",
                      "pattern": "^[a-z0-9-]+$",
                      "description": "URL-friendly identifier for the publication"
                    },
                    "custom_domain": {
                      "type": "string",
                      "description": "Custom domain configured for this publication"
                    },
                    "summary": {
                      "type": "string",
                      "maxLength": 500,
                      "description": "Brief description of the publication (max 500 characters)"
                    },
                    "logo_url": {
                      "type": "string",
                      "format": "uri",
                      "description": "URL to the publication's logo image"
                    }
                  },
                  "required": [
                    "id",
                    "name",
                    "ownerUserId",
                    "slug"
                  ],
                  "description": "Publication details retrieved successfully"
                }
              }
            }
          },
          "404": {
            "description": "Publication not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "enum": [
                        false
                      ],
                      "description": "Always false for error responses"
                    },
                    "msg": {
                      "type": "string",
                      "description": "Human-readable error message"
                    },
                    "error": {
                      "type": "string",
                      "description": "Technical error details or error code"
                    }
                  },
                  "required": [
                    "success",
                    "msg"
                  ],
                  "description": "Publication not found"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "enum": [
                        false
                      ],
                      "description": "Always false for error responses"
                    },
                    "msg": {
                      "type": "string",
                      "description": "Human-readable error message"
                    },
                    "error": {
                      "type": "string",
                      "description": "Technical error details or error code"
                    }
                  },
                  "required": [
                    "success",
                    "msg"
                  ],
                  "description": "Internal server error"
                }
              }
            }
          }
        }
      }
    },
    "/v1/publications/domain/{domain}": {
      "get": {
        "description": "Retrieve publication details using its custom domain",
        "summary": "Get publication by custom domain",
        "tags": [
          "publications"
        ],
        "parameters": [
          {
            "name": "domain",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Custom domain of the publication"
          },
          {
            "name": "x-api-key",
            "in": "header",
            "schema": {
              "type": "string",
              "description": "API key for authenticating requests"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Publication details retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "Unique identifier for the publication"
                    },
                    "name": {
                      "type": "string",
                      "description": "Display name of the publication"
                    },
                    "ownerUserId": {
                      "type": "string",
                      "description": "ID of the user who owns this publication"
                    },
                    "slug": {
                      "type": "string",
                      "pattern": "^[a-z0-9-]+$",
                      "description": "URL-friendly identifier for the publication"
                    },
                    "custom_domain": {
                      "type": "string",
                      "description": "Custom domain configured for this publication"
                    },
                    "summary": {
                      "type": "string",
                      "maxLength": 500,
                      "description": "Brief description of the publication (max 500 characters)"
                    },
                    "logo_url": {
                      "type": "string",
                      "format": "uri",
                      "description": "URL to the publication's logo image"
                    }
                  },
                  "required": [
                    "id",
                    "name",
                    "ownerUserId",
                    "slug"
                  ],
                  "description": "Publication details retrieved successfully"
                }
              }
            }
          },
          "404": {
            "description": "Publication not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "enum": [
                        false
                      ],
                      "description": "Always false for error responses"
                    },
                    "msg": {
                      "type": "string",
                      "description": "Human-readable error message"
                    },
                    "error": {
                      "type": "string",
                      "description": "Technical error details or error code"
                    }
                  },
                  "required": [
                    "success",
                    "msg"
                  ],
                  "description": "Publication not found"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "enum": [
                        false
                      ],
                      "description": "Always false for error responses"
                    },
                    "msg": {
                      "type": "string",
                      "description": "Human-readable error message"
                    },
                    "error": {
                      "type": "string",
                      "description": "Technical error details or error code"
                    }
                  },
                  "required": [
                    "success",
                    "msg"
                  ],
                  "description": "Internal server error"
                }
              }
            }
          }
        }
      }
    },
    "/v1/publications/{publicationId}/authors": {
      "get": {
        "description": "Retrieve all authors associated with a publication",
        "summary": "List publication authors",
        "tags": [
          "publications"
        ],
        "parameters": [
          {
            "name": "publicationId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Unique identifier of the publication"
          },
          {
            "name": "x-api-key",
            "in": "header",
            "schema": {
              "type": "string",
              "description": "API key for authenticating requests"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Authors retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "Unique identifier for the user"
                      },
                      "walletAddress": {
                        "type": "string",
                        "pattern": "^0x[a-fA-F0-9]{40}$",
                        "description": "Ethereum wallet address of the user"
                      },
                      "avatar_url": {
                        "type": "string",
                        "format": "uri",
                        "description": "URL to the user's avatar image"
                      },
                      "publicationId": {
                        "type": "string",
                        "description": "ID of the publication this user belongs to"
                      }
                    },
                    "required": [
                      "id",
                      "walletAddress",
                      "avatar_url",
                      "publicationId"
                    ]
                  },
                  "description": "Authors retrieved successfully"
                }
              }
            }
          },
          "404": {
            "description": "Publication not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "enum": [
                        false
                      ],
                      "description": "Always false for error responses"
                    },
                    "msg": {
                      "type": "string",
                      "description": "Human-readable error message"
                    },
                    "error": {
                      "type": "string",
                      "description": "Technical error details or error code"
                    }
                  },
                  "required": [
                    "success",
                    "msg"
                  ],
                  "description": "Publication not found"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "enum": [
                        false
                      ],
                      "description": "Always false for error responses"
                    },
                    "msg": {
                      "type": "string",
                      "description": "Human-readable error message"
                    },
                    "error": {
                      "type": "string",
                      "description": "Technical error details or error code"
                    }
                  },
                  "required": [
                    "success",
                    "msg"
                  ],
                  "description": "Internal server error"
                }
              }
            }
          }
        }
      }
    },
    "/v1/publications/{publicationId}/subscribers/count": {
      "get": {
        "description": "Retrieve the total number of subscribers for a publication",
        "summary": "Get subscriber count",
        "tags": [
          "publications"
        ],
        "parameters": [
          {
            "name": "publicationId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Unique identifier of the publication"
          },
          {
            "name": "x-api-key",
            "in": "header",
            "schema": {
              "type": "string",
              "description": "API key for authenticating requests"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Subscriber count retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "count": {
                      "type": "number",
                      "description": "Total number of subscribers"
                    }
                  },
                  "required": [
                    "count"
                  ],
                  "description": "Subscriber count retrieved successfully"
                }
              }
            }
          },
          "404": {
            "description": "Publication not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "enum": [
                        false
                      ],
                      "description": "Always false for error responses"
                    },
                    "msg": {
                      "type": "string",
                      "description": "Human-readable error message"
                    },
                    "error": {
                      "type": "string",
                      "description": "Technical error details or error code"
                    }
                  },
                  "required": [
                    "success",
                    "msg"
                  ],
                  "description": "Publication not found"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "enum": [
                        false
                      ],
                      "description": "Always false for error responses"
                    },
                    "msg": {
                      "type": "string",
                      "description": "Human-readable error message"
                    },
                    "error": {
                      "type": "string",
                      "description": "Technical error details or error code"
                    }
                  },
                  "required": [
                    "success",
                    "msg"
                  ],
                  "description": "Internal server error"
                }
              }
            }
          }
        }
      }
    },
    "/v1/publications/{publicationId}/posts": {
      "get": {
        "description": "Retrieve a paginated list of posts from a publication",
        "summary": "List publication posts",
        "tags": [
          "posts"
        ],
        "parameters": [
          {
            "name": "publicationId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Unique identifier of the publication"
          },
          {
            "name": "x-api-key",
            "in": "header",
            "schema": {
              "type": "string",
              "description": "API key for authenticating requests"
            }
          },
          {
            "name": "cursor",
            "in": "query",
            "description": "Cursor for pagination",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Maximum number of items to return (1-100, default: 20)",
            "schema": {
              "default": 20,
              "type": "integer",
              "minimum": 1,
              "maximum": 100
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Posts retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "items": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "Unique identifier for the post"
                          },
                          "title": {
                            "type": "string",
                            "maxLength": 200,
                            "description": "Title of the post (max 200 characters)"
                          },
                          "subtitle": {
                            "type": "string",
                            "maxLength": 300,
                            "description": "Subtitle or brief summary (max 300 characters)"
                          },
                          "slug": {
                            "type": "string",
                            "pattern": "^[a-z0-9-]+$",
                            "description": "URL-friendly identifier for the post"
                          },
                          "staticHtml": {
                            "type": "string",
                            "description": "Rendered HTML content of the post"
                          },
                          "json": {
                            "type": "string",
                            "description": "JSON representation of the post content structure"
                          },
                          "markdown": {
                            "type": "string",
                            "description": "Markdown source of the post content"
                          },
                          "coinId": {
                            "type": "string",
                            "description": "ID of the associated token/coin if post is tokenized"
                          }
                        },
                        "required": [
                          "id",
                          "title",
                          "slug",
                          "staticHtml",
                          "json",
                          "markdown"
                        ]
                      },
                      "description": "Array of items in this page"
                    },
                    "pagination": {
                      "type": "object",
                      "properties": {
                        "cursor": {
                          "type": "string",
                          "description": "Cursor for fetching the next page of results"
                        },
                        "hasMore": {
                          "type": "boolean",
                          "description": "Whether more results are available"
                        },
                        "total": {
                          "type": "number",
                          "description": "Total number of items available"
                        }
                      },
                      "required": [
                        "hasMore"
                      ]
                    }
                  },
                  "required": [
                    "items",
                    "pagination"
                  ],
                  "description": "Posts retrieved successfully"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request parameters",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "enum": [
                        false
                      ],
                      "description": "Always false for error responses"
                    },
                    "msg": {
                      "type": "string",
                      "description": "Human-readable error message"
                    },
                    "error": {
                      "type": "string",
                      "description": "Technical error details or error code"
                    }
                  },
                  "required": [
                    "success",
                    "msg"
                  ],
                  "description": "Invalid request parameters"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "enum": [
                        false
                      ],
                      "description": "Always false for error responses"
                    },
                    "msg": {
                      "type": "string",
                      "description": "Human-readable error message"
                    },
                    "error": {
                      "type": "string",
                      "description": "Technical error details or error code"
                    }
                  },
                  "required": [
                    "success",
                    "msg"
                  ],
                  "description": "Internal server error"
                }
              }
            }
          }
        }
      }
    },
    "/v1/posts/{postId}": {
      "get": {
        "description": "Retrieve detailed information about a specific post",
        "summary": "Get post by ID",
        "tags": [
          "posts"
        ],
        "parameters": [
          {
            "name": "postId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Unique identifier of the post"
          },
          {
            "name": "x-api-key",
            "in": "header",
            "schema": {
              "type": "string",
              "description": "API key for authenticating requests"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Post details retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "Unique identifier for the post"
                    },
                    "title": {
                      "type": "string",
                      "maxLength": 200,
                      "description": "Title of the post (max 200 characters)"
                    },
                    "subtitle": {
                      "type": "string",
                      "maxLength": 300,
                      "description": "Subtitle or brief summary (max 300 characters)"
                    },
                    "slug": {
                      "type": "string",
                      "pattern": "^[a-z0-9-]+$",
                      "description": "URL-friendly identifier for the post"
                    },
                    "staticHtml": {
                      "type": "string",
                      "description": "Rendered HTML content of the post"
                    },
                    "json": {
                      "type": "string",
                      "description": "JSON representation of the post content structure"
                    },
                    "markdown": {
                      "type": "string",
                      "description": "Markdown source of the post content"
                    },
                    "coinId": {
                      "type": "string",
                      "description": "ID of the associated token/coin if post is tokenized"
                    }
                  },
                  "required": [
                    "id",
                    "title",
                    "slug",
                    "staticHtml",
                    "json",
                    "markdown"
                  ],
                  "description": "Post details retrieved successfully"
                }
              }
            }
          },
          "404": {
            "description": "Post not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "enum": [
                        false
                      ],
                      "description": "Always false for error responses"
                    },
                    "msg": {
                      "type": "string",
                      "description": "Human-readable error message"
                    },
                    "error": {
                      "type": "string",
                      "description": "Technical error details or error code"
                    }
                  },
                  "required": [
                    "success",
                    "msg"
                  ],
                  "description": "Post not found"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "enum": [
                        false
                      ],
                      "description": "Always false for error responses"
                    },
                    "msg": {
                      "type": "string",
                      "description": "Human-readable error message"
                    },
                    "error": {
                      "type": "string",
                      "description": "Technical error details or error code"
                    }
                  },
                  "required": [
                    "success",
                    "msg"
                  ],
                  "description": "Internal server error"
                }
              }
            }
          }
        }
      }
    },
    "/v1/publications/{publicationId}/posts/slug/{slug}": {
      "get": {
        "description": "Retrieve a post using its publication ID and slug",
        "summary": "Get post by slug",
        "tags": [
          "posts"
        ],
        "parameters": [
          {
            "name": "publicationId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Unique identifier of the publication"
          },
          {
            "name": "slug",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[a-z0-9-]+$"
            },
            "description": "URL-friendly identifier of the post"
          },
          {
            "name": "x-api-key",
            "in": "header",
            "schema": {
              "type": "string",
              "description": "API key for authenticating requests"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Post details retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "Unique identifier for the post"
                    },
                    "title": {
                      "type": "string",
                      "maxLength": 200,
                      "description": "Title of the post (max 200 characters)"
                    },
                    "subtitle": {
                      "type": "string",
                      "maxLength": 300,
                      "description": "Subtitle or brief summary (max 300 characters)"
                    },
                    "slug": {
                      "type": "string",
                      "pattern": "^[a-z0-9-]+$",
                      "description": "URL-friendly identifier for the post"
                    },
                    "staticHtml": {
                      "type": "string",
                      "description": "Rendered HTML content of the post"
                    },
                    "json": {
                      "type": "string",
                      "description": "JSON representation of the post content structure"
                    },
                    "markdown": {
                      "type": "string",
                      "description": "Markdown source of the post content"
                    },
                    "coinId": {
                      "type": "string",
                      "description": "ID of the associated token/coin if post is tokenized"
                    }
                  },
                  "required": [
                    "id",
                    "title",
                    "slug",
                    "staticHtml",
                    "json",
                    "markdown"
                  ],
                  "description": "Post details retrieved successfully"
                }
              }
            }
          },
          "404": {
            "description": "Post not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "enum": [
                        false
                      ],
                      "description": "Always false for error responses"
                    },
                    "msg": {
                      "type": "string",
                      "description": "Human-readable error message"
                    },
                    "error": {
                      "type": "string",
                      "description": "Technical error details or error code"
                    }
                  },
                  "required": [
                    "success",
                    "msg"
                  ],
                  "description": "Post not found"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "enum": [
                        false
                      ],
                      "description": "Always false for error responses"
                    },
                    "msg": {
                      "type": "string",
                      "description": "Human-readable error message"
                    },
                    "error": {
                      "type": "string",
                      "description": "Technical error details or error code"
                    }
                  },
                  "required": [
                    "success",
                    "msg"
                  ],
                  "description": "Internal server error"
                }
              }
            }
          }
        }
      }
    },
    "/v1/users/{userId}": {
      "get": {
        "description": "Retrieve detailed information about a specific user",
        "summary": "Get user by ID",
        "tags": [
          "users"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Unique identifier of the user"
          },
          {
            "name": "x-api-key",
            "in": "header",
            "schema": {
              "type": "string",
              "description": "API key for authenticating requests"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User details retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "Unique identifier for the user"
                    },
                    "walletAddress": {
                      "type": "string",
                      "pattern": "^0x[a-fA-F0-9]{40}$",
                      "description": "Ethereum wallet address of the user"
                    },
                    "avatar_url": {
                      "type": "string",
                      "format": "uri",
                      "description": "URL to the user's avatar image"
                    },
                    "publicationId": {
                      "type": "string",
                      "description": "ID of the publication this user belongs to"
                    }
                  },
                  "required": [
                    "id",
                    "walletAddress",
                    "avatar_url",
                    "publicationId"
                  ],
                  "description": "User details retrieved successfully"
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "enum": [
                        false
                      ],
                      "description": "Always false for error responses"
                    },
                    "msg": {
                      "type": "string",
                      "description": "Human-readable error message"
                    },
                    "error": {
                      "type": "string",
                      "description": "Technical error details or error code"
                    }
                  },
                  "required": [
                    "success",
                    "msg"
                  ],
                  "description": "User not found"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "enum": [
                        false
                      ],
                      "description": "Always false for error responses"
                    },
                    "msg": {
                      "type": "string",
                      "description": "Human-readable error message"
                    },
                    "error": {
                      "type": "string",
                      "description": "Technical error details or error code"
                    }
                  },
                  "required": [
                    "success",
                    "msg"
                  ],
                  "description": "Internal server error"
                }
              }
            }
          }
        }
      }
    },
    "/v1/users/wallet/{walletAddress}": {
      "get": {
        "description": "Retrieve user details using their Ethereum wallet address",
        "summary": "Get user by wallet address",
        "tags": [
          "users"
        ],
        "parameters": [
          {
            "name": "walletAddress",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^0x[a-fA-F0-9]{40}$"
            },
            "description": "Ethereum wallet address"
          },
          {
            "name": "x-api-key",
            "in": "header",
            "schema": {
              "type": "string",
              "description": "API key for authenticating requests"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User details retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "Unique identifier for the user"
                    },
                    "walletAddress": {
                      "type": "string",
                      "pattern": "^0x[a-fA-F0-9]{40}$",
                      "description": "Ethereum wallet address of the user"
                    },
                    "avatar_url": {
                      "type": "string",
                      "format": "uri",
                      "description": "URL to the user's avatar image"
                    },
                    "publicationId": {
                      "type": "string",
                      "description": "ID of the publication this user belongs to"
                    }
                  },
                  "required": [
                    "id",
                    "walletAddress",
                    "avatar_url",
                    "publicationId"
                  ],
                  "description": "User details retrieved successfully"
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "enum": [
                        false
                      ],
                      "description": "Always false for error responses"
                    },
                    "msg": {
                      "type": "string",
                      "description": "Human-readable error message"
                    },
                    "error": {
                      "type": "string",
                      "description": "Technical error details or error code"
                    }
                  },
                  "required": [
                    "success",
                    "msg"
                  ],
                  "description": "User not found"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "enum": [
                        false
                      ],
                      "description": "Always false for error responses"
                    },
                    "msg": {
                      "type": "string",
                      "description": "Human-readable error message"
                    },
                    "error": {
                      "type": "string",
                      "description": "Technical error details or error code"
                    }
                  },
                  "required": [
                    "success",
                    "msg"
                  ],
                  "description": "Internal server error"
                }
              }
            }
          }
        }
      }
    },
    "/v1/coins/{contractAddress}": {
      "get": {
        "description": "Retrieve information about a tokenized post using its contract address",
        "summary": "Get coin by contract address",
        "tags": [
          "coins"
        ],
        "parameters": [
          {
            "name": "contractAddress",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^0x[a-fA-F0-9]{40}$"
            },
            "description": "Ethereum smart contract address"
          },
          {
            "name": "x-api-key",
            "in": "header",
            "schema": {
              "type": "string",
              "description": "API key for authenticating requests"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Coin details retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "Unique identifier for the coin"
                    },
                    "contractAddress": {
                      "type": "string",
                      "pattern": "^0x[a-fA-F0-9]{40}$",
                      "description": "Ethereum smart contract address for this token"
                    },
                    "symbol": {
                      "type": "string",
                      "pattern": "^[A-Z]{3,6}$",
                      "description": "Token symbol (3-6 uppercase letters)"
                    },
                    "postId": {
                      "type": "string",
                      "description": "ID of the post this token represents"
                    }
                  },
                  "required": [
                    "id",
                    "contractAddress",
                    "symbol",
                    "postId"
                  ],
                  "description": "Coin details retrieved successfully"
                }
              }
            }
          },
          "404": {
            "description": "Coin not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "enum": [
                        false
                      ],
                      "description": "Always false for error responses"
                    },
                    "msg": {
                      "type": "string",
                      "description": "Human-readable error message"
                    },
                    "error": {
                      "type": "string",
                      "description": "Technical error details or error code"
                    }
                  },
                  "required": [
                    "success",
                    "msg"
                  ],
                  "description": "Coin not found"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "enum": [
                        false
                      ],
                      "description": "Always false for error responses"
                    },
                    "msg": {
                      "type": "string",
                      "description": "Human-readable error message"
                    },
                    "error": {
                      "type": "string",
                      "description": "Technical error details or error code"
                    }
                  },
                  "required": [
                    "success",
                    "msg"
                  ],
                  "description": "Internal server error"
                }
              }
            }
          }
        }
      }
    },
    "/v1/coins/{contractAddress}/holders": {
      "get": {
        "description": "Retrieve a paginated list of holders for a tokenized post",
        "summary": "List coin holders",
        "tags": [
          "coins"
        ],
        "parameters": [
          {
            "name": "contractAddress",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^0x[a-fA-F0-9]{40}$"
            },
            "description": "Ethereum smart contract address"
          },
          {
            "name": "x-api-key",
            "in": "header",
            "schema": {
              "type": "string",
              "description": "API key for authenticating requests"
            }
          },
          {
            "name": "cursor",
            "in": "query",
            "description": "Cursor for pagination",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Maximum number of items to return (1-100, default: 20)",
            "schema": {
              "default": 20,
              "type": "integer",
              "minimum": 1,
              "maximum": 100
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Holders retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "items": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "walletAddress": {
                            "type": "string",
                            "pattern": "^0x[a-fA-F0-9]{40}$",
                            "description": "Ethereum wallet address of the holder"
                          },
                          "userId": {
                            "type": "string",
                            "description": "User ID if holder has a Paragraph account"
                          },
                          "balance": {
                            "type": "string",
                            "pattern": "^[0-9]+$",
                            "description": "Token balance held (in wei)"
                          },
                          "supportedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "ISO 8601 timestamp when user first supported"
                          }
                        },
                        "required": [
                          "walletAddress",
                          "balance",
                          "supportedAt"
                        ]
                      },
                      "description": "Array of items in this page"
                    },
                    "pagination": {
                      "type": "object",
                      "properties": {
                        "cursor": {
                          "type": "string",
                          "description": "Cursor for fetching the next page of results"
                        },
                        "hasMore": {
                          "type": "boolean",
                          "description": "Whether more results are available"
                        },
                        "total": {
                          "type": "number",
                          "description": "Total number of items available"
                        }
                      },
                      "required": [
                        "hasMore"
                      ]
                    }
                  },
                  "required": [
                    "items",
                    "pagination"
                  ],
                  "description": "Holders retrieved successfully"
                }
              }
            }
          },
          "404": {
            "description": "Coin not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "enum": [
                        false
                      ],
                      "description": "Always false for error responses"
                    },
                    "msg": {
                      "type": "string",
                      "description": "Human-readable error message"
                    },
                    "error": {
                      "type": "string",
                      "description": "Technical error details or error code"
                    }
                  },
                  "required": [
                    "success",
                    "msg"
                  ],
                  "description": "Coin not found"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "enum": [
                        false
                      ],
                      "description": "Always false for error responses"
                    },
                    "msg": {
                      "type": "string",
                      "description": "Human-readable error message"
                    },
                    "error": {
                      "type": "string",
                      "description": "Technical error details or error code"
                    }
                  },
                  "required": [
                    "success",
                    "msg"
                  ],
                  "description": "Internal server error"
                }
              }
            }
          }
        }
      }
    }
  },
  "info": {
    "title": "Paragraph API",
    "version": "1.0.0",
    "description": "Public API for interacting with Paragraph publications, posts, users, and tokenized content.\n\n## Authentication\nAll endpoints require an API key passed in the `x-api-key` header.\n\n## Rate Limiting\nAPI requests are rate-limited to ensure fair usage. Contact support for higher limits.\n\n## Pagination\nList endpoints support cursor-based pagination using `cursor` and `limit` parameters.",
    "contact": {
      "name": "Paragraph Support",
      "email": "support@paragraph.com",
      "url": "https://paragraph.com/support"
    },
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    }
  },
  "servers": [
    {
      "url": "https://api.paragraph.com/api",
      "description": "Production server"
    },
    {
      "url": "http://localhost:3001/api",
      "description": "Local development server"
    }
  ],
  "tags": [
    {
      "name": "publications",
      "description": "Operations related to publications"
    },
    {
      "name": "posts",
      "description": "Operations related to posts and content"
    },
    {
      "name": "users",
      "description": "Operations related to users and authors"
    },
    {
      "name": "coins",
      "description": "Operations related to tokenized content"
    }
  ],
  "security": [
    {
      "ApiKeyAuth": []
    }
  ],
  "components": {
    "securitySchemes": {
      "ApiKeyAuth": {
        "type": "apiKey",
        "in": "header",
        "name": "x-api-key",
        "description": "API key for authenticating requests"
      }
    }
  }
}